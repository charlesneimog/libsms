=-=-=-=-=-=-=- libsms change log -=-=-=-=-=-=

=== Nov. 15, 2008 === version 1.0, first release ============================================

This release represents a revival of the original code from Xavier Serra, which dates back to the early 1990's.
Care has been taken to make sure the functionality of the algorithms important to SMS have not changed,
while still updating function calls to work with modern day platforms.  Future releases will focus more on incorporating
improvements in the SMS model that have since been discovered. Some changes to the original code include:
        - using libsndfile for sound file handling
        - using OOURA fft routines for real-DFT functions (fftw3 as well, but not fully working)
        - optionally can compile to use FFTW3 fft libary, but it is still in a testing stage and fails in pd externals
        - appended the namespaces sms_* and SMS_ to all globally seen functions, structures and defines/enumerations
        - uses scons instead of make, as it is very powerful, being based in python
        - python SWIG wrappers
        - synthesis parameters "stocgain" and "ftranspose" are added to change the current synthesis, but not the data itself
        - smsToYaml - converts a binary *.sms file to YAML text format, which is very easy to read
        - made sms_errorString() for returning strings-to-errors (and not just exiting)
        - made sms_random() to produce random numbers
        - made sms_power2() to garuntee an integer is a power of two
        - no longer uses shorts, everything is floating point (added functions sms_dBToMag and vice-versa for this too)
        - functions sms_initAnalysis and sms_initSynthesis for calling to set up the proper arrays before synthesis
           (was done in the command line programs before)
        - sms_initAnalParams to set basic sane parameters in an SMS_AnalParams struct
        - sms_init() for initializing global arrays (just sine and sinc tables at the moment)
        - soundfile output is variable
        - converted README's to manpages
        - samplerate is independant of analysis/synthesis ( a necessary for pure data)
        - doxygen documentation
        - various minor optimizations, but much more will be done once things are running really smooth
