# use emacs org-mode for pretty colors
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
libsms work log
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
* Todo list (0.9)
** TODO things to add to main doc page
   - [X] copyright information
   - [X] info on pd files 
   - [X] info on python
   - [X] info on tools
   - [ ] info on examples
   - [X] section on this log
** TODO scons install for pd and mac os x 10.4
   - [ ] allow for telling scons where the header is located
   - [X] make callable from main scons script
** DONE pd help files need to be finished
** TODO an example pd file for good editing
** TODO make bash scripts for analysis/synthesis
** TODO smsanal
   - [ ] analyzing piano.aiff crashes
   - [ ] make sure analyzing 2 sounds (one after other) works
** TODO make sure [smssynth~] handles changes to smsbuf correctly
    - [ ] new analysis of different file
    - [ ] new analysis of same file, different parameters
** TODO clean svn
*** what is calcCorr in tools?
** TODO why does yaml file show partials with negative db?!
   - see guitarchord-debugme.yaml in examples dir
* Todo list (after 1.0)
** TODO Doxygen todo list
   - pretty good for now, but many more things that could use better docs
** TODO resynthesize with only 1 fft
   - in the current implementation, the stochastic and deterministic are inverse-fft'ed
     seperately
   - will need to mulitply the stochastic spectrum by the inverse blackmann harris
     window because the deterministic part uses this (see DAFX pg 36)
** TODO stochastic resynthesis needs a closer look
*** TODO make sure different samplerates produce similar spectrums
    - originally the samplerate was set at 44100
    -  now it is variable
    - [ ] make plots to compare the coefficients at different samplerates
    - [ ] determine why certain constants are within StochSynthApprox (smsSynthesis.c)
*** TODO make sure nStocCoeff is set right for different framerates
    - right now, coefficients are limited to SR / FR, rounded up to the nearest pow2
    - when nCoeff is set higher than this, artifacts are appearing in the residual synthesis
    - [ ] need to check at the beginning and limit the coeffcients
** TODO make a high level function for Post-Processing an SMS analysis
*** should be included in analysis like programs
    - return a pointer to another smsData structure, or file?
*** TODO contains a smsResample 
*** TODO contains smsClean code
    - iterates over the entire file to connect short tracks
    - this is different than the built in cleaning in smsAnalysis because it
      already has the entire analysis
*** TODO Spectral envelope
** TODO make python synthesis script with SWIG wrappers
*** first start by copying smsSynth 
*** then add time-based manipulations (envelopes, pitch/time adjustments)
** TODO set of python plotting tools
    - [ ] use SWIG wrapper instead of yaml
** TODO re-analysis
   - the problem was SMS_ANAL_DELAY was not large enough, so not all of the
     bad frames were being re-analyzed
   - [ ] need to make this a member of SMS_AnalParams structur
** TODO [smssynth~]: fix function for changing sizehop
** TODO make framerate of analysis specifieble by milleseconds instead of hz
** TODO [#C] optimizing
   - [ ] benchmark FFT's
   - [ ] change fabs() to fabsf() if they don't need to be doubles
     - [ ] same with floorf
   - [ ] calloc's/malloc's done per function call
   - check if they are only done once
       - most are in if statements, add an else with a print to check
   - [ ] use table lookup for dB conversion
   - [ ] currently uses random() from stdlib.
          - try merseinne twister / other generator
* Wish list
** improvement of inharmonic analysis/synthesis
   - is it being done right now?
   - in other analysis programs, one has as many as 500 partials for enharmonic sounds
   - why is smsAnal only producing < 100?
** restore Hybridize functions
*** was previously only used with the MK tool, which isn't available now
** transient model synthesis
*** based on the Discrete Cosine Transform
** get FFTW3 to work with pd externals
*** current state:
    - when fft arrays are initialized, the pointers are lost
    - this only happens in pd, not from the terminal (and not with other fft algos)
* Things done
** DONE SWIG Python wrapper
** DONE smsToYaml for importing into python
** DONE remove iOriginalSRate from SMS_Header
   - it seems that if the synthesis is completely independent of 
   analysis, this shouldn't be.
   - now just keeps original hopsize so that stochastic component
     can be reconstructed
** DONE run memory leak detector
   - valgrind reports are good
** DONE organize files/functions
** DONE update documentation of functions
** DONE append sms_ to functions declared in sms.h
** DONE export functions in smsAnal to library
     - ARGUMENTS will only be for smsAnal, but an initAnalParams
        function is made that does something similar to fillArguments
** DONE make a function for returning a string to the error
   - right now it is necessary to cop/paste a large block of code to do this
   - should replace the 'quit' function, and shouldn't exit by default
** DONE Globals:
*** DONE Tables
    - declare them in sms.h
    - allocate in SmsInit()
*** DONE pFrames/ppFrames
*** DONE FResidualPerc
        - defined in variousFuntions for now, as SmsInit() is always called.
** DONE sms_init() should be a global init before anything
** DONE make soundfile output format variable
** DONE convert from short to floating point data
   - will need this for pd anyway
   - everything is computed in float point, so why range from 0-16000   then?
** DONE move smsMod's stochostic gain adjusting to smsSynth
   - should stocGain be available for all stoc types?
** DONE make sure pFStocGain is always set
     - zero if no stoc component, 1 if wave, or val if StocSpectrum
** DONE FFTW3f for fft's
*** DONE Spectrum
    - deterministic seems to be handled correctly.. or is it?
    - not stochastic
       - PeakDetection is producing different results
       - so, Spectrum must not be right identical yet
*** DONE start with SineSynthIFFT until it sounds right
**** questions about SineSynthIFFT()
     - [ ] why is nBins set to 8?
            - SincTab is also hardcoded for index = 0:8
     - [ ] why is the real component obtained by Mag * sin(theta)?
            - shouldn't it be cos(theta)?
** DONE switch build scripts to scons
   - [X] get env. exporting/importing fixed
   - [X] add install/uninstall functionality
** DONE convert README's to manpages.
   - [ ] update to fit new parameters
   - [ ] proofread** DONE [#B] update USAGE arguments to tell what different values do
** DONE should have the option to store residual in audio samples or STFT frames
*** TODO organize analParams to allow for options:
   - [X] sound samples
   - [X] filter approximation
   - [X] no stachostic component
*** TODO reorganization of SmsSynthesis
**** possible types
***** Deterministic only, OSC
***** Deterministic only, IFFT
***** Stoc only, IFFT
***** Stoc only, waveform
***** Stoc only, Approx
***** Deterministic + Stoc, IFFT
***** Deterministic + Stoc, IFFT + Approx
***** Deterministic + Stoc, IFFT + Waveform
***** Deterministic + Stoc, OSC + IFFT
***** Deterministic + Stoc, OSC + Approx
***** Deterministic + Stoc, OSC + Waveform

*** TODO Store Residual as STFT 
    - does imag need to be stored?
       - yes, it is cheaper to store/recall than to make a random one
    - [ ] allocate memory
    - [X] need sizeDFT in SMS_HEADER (i think)
    - should this be 2x hopsize because there is overlap of 50%?
    - [ ] store in stochAnalysis (probably should be somewhere else..)
    - [ ] make sure it is correctly stored in smsToYaml/smsPrint
*** TODO modify smsResample to concatenate stocWave data
    - [ ] will take adding iWaveSamples to SMS_DATA
** DONE make samplerate independant of analysis/synthesis
*** Investigating samplerate/framerate dependencies:
**** How is resample making the current SMS_DATA frame?

*** In order for real-time synthesis:
**** iLastSample in smsSynth must be replaced with 
        - iNumSamples will be a predefined buffer of samples to synthesis at one time,
          indepenent of synthesis blocksize       

** DONE pd externals
*** [smsbuf]
**** DONE [#A] loads an sms file into a buffer
***** a header/data should live
***** data is an array of sms records
***** what else needs to be buffered?
        - timetags? frametag     
**** DONE [#C] stores the buffer to sms file
*** [smsanal]
**** DONE reads a pd array and analyzes it
    - also can analyze from file
**** DONE add analysis parameter classes (lots of them)
*** [smssynth]
**** DONE [#A] has access to an [smsbuf] by symbol name
**** DONE [#A] synthesizes the [smsbuf]
*** [smsedit]
